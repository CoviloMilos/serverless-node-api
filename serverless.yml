org: mcovilo
app: serverless-demo
service: serverless-demo
frameworkVersion: '3'

provider:
  name: aws
  deploymentMethod: direct # Direct deployments are daster and have no downsides
  stage: dev
  runtime: nodejs14.x
  tracing: 
    apiGateway: true
    lambda: true

plugins:
  - serverless-offline
  - serverless-middleware
  - serverless-dotenv-plugin
  - serverless-api-gateway-caching

custom:
  serverless-offline:
    noPrependStageInUrl: true
    httpPort: 3000
    lambdaPort: 3001
  middleware:
    pre:
      - src/middlewares/pre-middleware.dbConnect
    # pos:
    #   - catch: src/middlewares/pos-middleware.errorHandler
  apiGatewayCaching:
    enabled: true
    clusterSize: '0.5' # defaults to '0.5'
    ttlInSeconds: 300 # defaults to the maximum allowed: 3600
    dataEncrypted: true # defaults to false
    perKeyInvalidation:
      requireAuthorization: true # default is true
      handleUnauthorizedRequests: Ignore # default is "IgnoreWithWarning".

  optimize:
    debug: true
    exclude: ['ajv']
    extensions: ['.extension']
    external: ['sharp']
    externalPaths:
      sharp: 'external_modules/sharp'
    global: true
    ignore: ['ajv']
    includePaths: ['bin/some-binary-file']
    minify: false
    prefix: 'dist'
    plugins: ['transform-decorators-legacy']
    presets: ['es2017']


functions:
  # express:
  #   name: ${sls:stage}-hello
  #   description: Used to say hello
  #   memorySize: 512
  #   handler: src/handlers/express.handler
  #   events:
  #     - httpApi: # Here we can expose API for hole resource. For example all /blocks endpoints
  #         path: /{proxy+}
  #         method: get
  #     - http: # Here we specify one endpoint
  #         path: /hello
  #         method: get
  #         cors:
  #           allowedOrigins:
  #             - http://example.com
  #             - http://example2.com
  #           allowedHeaders:
  #             - Content-Type
  #           allowedMethods:
  #             - GET
  #           allowCredentials: false
  health:
    name: ${sls:stage}-health
    description: Health check
    memorySize: 1024
    handler: src/handlers/block-handler.healthCheck
    events:
      - http:
          path: /health
          method: get
  getBlocks:
    name: ${sls:stage}-blocks
    description: Get blocks
    memorySize: 1024
    handler: src/handlers/block-handler.getBlocks
    events:
      - http:
          path: /blocks
          method: get
  getBlockByHash:
    name: ${sls:stage}-block-hash
    description: Get block by hash
    memorySize: 1024
    handler: src/handlers/block-handler.getBlockByHash
    events:
      - http:
          path: /blocks/{hash}
          method: get
  getTransactions:
    name: ${sls:stage}-transactions
    description: Get transactions
    memorySize: 1024
    handler: src/handlers/transaction-handler.getTransactions
    events:
      - http:
          path: /transactions
          method: get
  getTransactionByHash:
    name: ${sls:stage}-transaction-hash
    description: Get Transaction by hash
    memorySize: 1024
    handler: src/handlers/transaction-handler.getTransactionByHash
    events:
      - http:
          path: /transactions/{hash}
          method: get